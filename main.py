import telebot
import datetime
import time
import threading
import random

TOKEN = '7494146854:AAEQMunORGdbRH0C6wpwGUH1tGGyK5K5bYM'
bot = telebot.TeleBot(TOKEN)

# Глобальная переменная для хранения chat_id
chat_id = None

@bot.message_handler(commands=['start'])
def send_welcome(message):
    global chat_id
    chat_id = message.chat.id  # Сохраняем chat_id
    bot.reply_to(message, "Привет! Я бот и я помогу вам в оптимизации процесса обучения")
    # Запускаем поток для отправки напоминаний
    threading.Thread(target=send_reminders, args=(chat_id,), daemon=True).start()

@bot.message_handler(commands=['fact'])
def fact_message(message):
  list = ["**Увеличение эффективности**: Оптимизация учебных процессов помогает сократить время, необходимое для усвоения материала, и повышает его качество. Это позволяет студентам быстрее достигать своих образовательных целей.",
   "**Индивидуальный подход**: Оптимизация позволяет учитывать индивидуальные особенности учащихся, их темпы и стили обучения, что способствует более глубокому пониманию материала и повышению мотивации.",
    "*Адаптация к изменениям**: Образование постоянно изменяется, появляются новые технологии и методики. Оптимизация обучения помогает образовательным учреждениям оставаться актуальными и адаптироваться к новым требованиям.",
     "**Экономия ресурсов**: Эффективные методы и технологии обучения позволяют экономить время и средства, как для преподавателей, так и для студентов. Это может включать в себя использование онлайн-курсов, электронных учебников и других цифровых ресурсов.",
      "**Повышение качества образования**: Оптимизация учебного процесса может привести к улучшению качества образования, что, в свою очередь, влияет на конкурентоспособность выпускников на рынке труда.", 
      "*Использование данных**: Анализ данных о процессе обучения (например, результаты тестов, время, затраченное на выполнение заданий) позволяет выявлять слабые места и корректировать подходы к обучению.", 
      "**Поддержка разнообразия**: Оптимизация обучения помогает создавать инклюзивные образовательные среды, которые учитывают различия в культурном, языковом и социальном фоне студентов.",
       "*Устойчивое развитие навыков**: В условиях быстро меняющегося мира оптимизация обучения помогает учащимся развивать критическое мышление, креативность и другие навыки, необходимые для успешной карьеры."]
  random_fact = random.choice(list)
  bot.reply_to(message, f'Оптимизация обучения это:  {random_fact}')

def send_reminders(chat_id):
  first_rem = "24:00"
  second_rem = "04:00"
  end_rem = "08:00"
  while True:
    now = datetime.datetime.now().strftime("%H:%M")
    if now == first_rem or now == second_rem or now == end_rem:
      bot.send_message(chat_id, "Очередной урок открыт")
      time.sleep(61)
    time.sleep(1)

bot.polling(non_stop=True)
